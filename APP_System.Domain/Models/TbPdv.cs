// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace APP_Sytem.API.Models;

[Table("tb_pdv")]
[Index("FkTbAtor", Name = "ifk_tb_ator_tb_pdv")]
public partial class TbPdv
{
    [Key]
    [Column("id_pdv")]
    public int IdPdv { get; set; }

    [Column("pdv_serv", TypeName = "varchar(300)")]
    public string PdvServ { get; set; }

    [Column("pdv_host", TypeName = "varchar(300)")]
    public string PdvHost { get; set; }

    [Column("pdv_dtCri", TypeName = "DATETIME")]
    public DateTime PdvDtCri { get; set; }

    [Column("pdv_dtAlt", TypeName = "DATETIME")]
    public DateTime PdvDtAlt { get; set; }

    [Column("pdv_dtAcs", TypeName = "DATETIME")]
    public DateTime? PdvDtAcs { get; set; }

    [Column("pdv_desat", TypeName = "NUMERIC(1, 0)")]
    public int? PdvDesat { get; set; }

    [Column("pdv_pdvNum", TypeName = "smallint")]
    public short PdvPdvNum { get; set; }

    [Column("pdv_nfeHomSerie", TypeName = "smallint")]
    public short PdvNfeHomSerie { get; set; }

    [Column("pdv_nfeHomNum", TypeName = "INT")]
    public int PdvNfeHomNum { get; set; }

    [Column("pdv_nfeProdSerie", TypeName = "smallint")]
    public short PdvNfeProdSerie { get; set; }

    [Column("pdv_nfeProdNum", TypeName = "INT")]
    public int PdvNfeProdNum { get; set; }

    [Column("pdv_dskCaption", TypeName = "varchar(64)")]
    public string PdvDskCaption { get; set; }

    [Column("pdv_dskIndex", TypeName = "NUMERIC(10, 0)")]
    public int? PdvDskIndex { get; set; }

    [Column("pdv_dskSerialNumber", TypeName = "varchar(128)")]
    public string PdvDskSerialNumber { get; set; }

    [Column("pdv_dskSignature", TypeName = "NUMERIC(10, 0)")]
    public int? PdvDskSignature { get; set; }

    [Column("pdv_dskSize", TypeName = "NUMERIC(20, 0)")]
    public long? PdvDskSize { get; set; }

    [Column("pdv_dskStatus", TypeName = "varchar(10)")]
    public string PdvDskStatus { get; set; }

    [Column("pdv_nicAdapterType", TypeName = "varchar(64)")]
    public string PdvNicAdapterType { get; set; }

    [Column("pdv_nicAdapterTypeID", TypeName = "NUMERIC(5, 0)")]
    public int? PdvNicAdapterTypeId { get; set; }

    [Column("pdv_nicCaption", TypeName = "varchar(64)")]
    public string PdvNicCaption { get; set; }

    [Column("pdv_nicDescription", TypeName = "varchar(128)")]
    public string PdvNicDescription { get; set; }

    [Column("pdv_nicInterfaceIndex", TypeName = "NUMERIC(10, 0)")]
    public int? PdvNicInterfaceIndex { get; set; }

    [Column("pdv_nicMacAddress", TypeName = "varchar(32)")]
    public string PdvNicMacAddress { get; set; }

    [Column("pdv_nicMacAddressVpn", TypeName = "varchar(32)")]
    public string PdvNicMacAddressVpn { get; set; }

    [Column("pdv_nicManufacturer", TypeName = "varchar(64)")]
    public string PdvNicManufacturer { get; set; }

    [Column("pdv_nicName", TypeName = "varchar(128)")]
    public string PdvNicName { get; set; }

    [Column("pdv_nicNetEnabled", TypeName = "NUMERIC(1, 0)")]
    public int? PdvNicNetEnabled { get; set; }

    [Column("pdv_nicSpeed", TypeName = "NUMERIC(20, 0)")]
    public long? PdvNicSpeed { get; set; }

    [Column("pdv_nicCfgDHCPEnabled", TypeName = "NUMERIC(1, 0)")]
    public int? PdvNicCfgDhcpenabled { get; set; }

    [Column("pdv_nicCfgDHCPServer", TypeName = "varchar(48)")]
    public string PdvNicCfgDhcpserver { get; set; }

    [Column("pdv_nicCfgDNSDomain", TypeName = "varchar(255)")]
    public string PdvNicCfgDnsdomain { get; set; }

    [Column("pdv_nicCfgIPAddress")]
    public string PdvNicCfgIpaddress { get; set; }

    [Column("pdv_nicCfgIPAddressVpn")]
    public string PdvNicCfgIpaddressVpn { get; set; }

    [Column("pdv_nicCfgIPConnectionMetric", TypeName = "NUMERIC(10, 0)")]
    public int? PdvNicCfgIpconnectionMetric { get; set; }

    [Column("pdv_nicCfgIPEnabled", TypeName = "NUMERIC(1, 0)")]
    public int? PdvNicCfgIpenabled { get; set; }

    [Column("pdv_pcPgFlAllocatedBaseSize", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPgFlAllocatedBaseSize { get; set; }

    [Column("pdv_pcPgFlCurrentUsage", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPgFlCurrentUsage { get; set; }

    [Column("pdv_pcPgFlPeakUsage", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPgFlPeakUsage { get; set; }

    [Column("pdv_pcPowInstanceID", TypeName = "varchar(60)")]
    public string PdvPcPowInstanceId { get; set; }

    [Column("pdv_pcPowElementName", TypeName = "varchar(60)")]
    public string PdvPcPowElementName { get; set; }

    [Column("pdv_pcLdCaption", TypeName = "varchar(60)")]
    public string PdvPcLdCaption { get; set; }

    [Column("pdv_pcLdCompressed", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcLdCompressed { get; set; }

    [Column("pdv_pcLdConfigManagerErrorCode", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcLdConfigManagerErrorCode { get; set; }

    [Column("pdv_pcLdDeviceID", TypeName = "varchar(60)")]
    public string PdvPcLdDeviceId { get; set; }

    [Column("pdv_pcLdDriveType", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcLdDriveType { get; set; }

    [Column("pdv_pcLdFileSystem", TypeName = "varchar(20)")]
    public string PdvPcLdFileSystem { get; set; }

    [Column("pdv_pcLdFreeSpace", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcLdFreeSpace { get; set; }

    [Column("pdv_pcLdLastErrorCode", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcLdLastErrorCode { get; set; }

    [Column("pdv_pcLdName", TypeName = "varchar(64)")]
    public string PdvPcLdName { get; set; }

    [Column("pdv_pcLdSize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcLdSize { get; set; }

    [Column("pdv_pcLdVolumeDirty", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcLdVolumeDirty { get; set; }

    [Column("pdv_pcLdVolumeSerialNumber", TypeName = "varchar(60)")]
    public string PdvPcLdVolumeSerialNumber { get; set; }

    [Column("pdv_pcAutomaticManagedPagefile", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcAutomaticManagedPagefile { get; set; }

    [Column("pdv_pcAutomaticResetBootOption", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcAutomaticResetBootOption { get; set; }

    [Column("pdv_pcAutomaticResetCapability", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcAutomaticResetCapability { get; set; }

    [Column("pdv_pcBootROMSupported", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcBootRomsupported { get; set; }

    [Column("pdv_pcBootupState", TypeName = "varchar(50)")]
    public string PdvPcBootupState { get; set; }

    [Column("pdv_pcCurrentTimeZone", TypeName = "smallint")]
    public short PdvPcCurrentTimeZone { get; set; }

    [Column("pdv_pcDaylightInEffect", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcDaylightInEffect { get; set; }

    [Column("pdv_pcDNSHostName", TypeName = "varchar(255)")]
    public string PdvPcDnshostName { get; set; }

    [Column("pdv_pcDomainRole", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcDomainRole { get; set; }

    [Column("pdv_pcEnableDaylightSavingsTime", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcEnableDaylightSavingsTime { get; set; }

    [Column("pdv_pcHypervisorPresent", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcHypervisorPresent { get; set; }

    [Column("pdv_pcManufacturer", TypeName = "varchar(50)")]
    public string PdvPcManufacturer { get; set; }

    [Column("pdv_pcNetworkServerModeEnabled", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcNetworkServerModeEnabled { get; set; }

    [Column("pdv_pcNumberOfLogicalProcessors", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcNumberOfLogicalProcessors { get; set; }

    [Column("pdv_pcNumberOfProcessors", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcNumberOfProcessors { get; set; }

    [Column("pdv_pcPCSystemType", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPcsystemType { get; set; }

    [Column("pdv_pcTotalPhysicalMemory", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcTotalPhysicalMemory { get; set; }

    [Column("pdv_pcUserName", TypeName = "varchar(255)")]
    public string PdvPcUserName { get; set; }

    [Column("pdv_pcWakeUpType", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcWakeUpType { get; set; }

    [Column("pdv_biosCaption", TypeName = "varchar(64)")]
    public string PdvBiosCaption { get; set; }

    [Column("pdv_biosSerialNumber", TypeName = "varchar(64)")]
    public string PdvBiosSerialNumber { get; set; }

    [Column("pdv_biosSMBIOSBIOSVersion", TypeName = "varchar(64)")]
    public string PdvBiosSmbiosbiosversion { get; set; }

    [Column("pdv_biosSoftwareElementID", TypeName = "varchar(256)")]
    public string PdvBiosSoftwareElementId { get; set; }

    [Column("pdv_boardManufacturer", TypeName = "varchar(256)")]
    public string PdvBoardManufacturer { get; set; }

    [Column("pdv_boardProduct", TypeName = "varchar(64)")]
    public string PdvBoardProduct { get; set; }

    [Column("pdv_boardSerialNumber", TypeName = "varchar(64)")]
    public string PdvBoardSerialNumber { get; set; }

    [Column("pdv_boardStatus", TypeName = "varchar(10)")]
    public string PdvBoardStatus { get; set; }

    [Column("pdv_boardVersion", TypeName = "varchar(64)")]
    public string PdvBoardVersion { get; set; }

    [Column("pdv_pcOsBuildNumber", TypeName = "varchar(10)")]
    public string PdvPcOsBuildNumber { get; set; }

    [Column("pdv_pcOsCaption", TypeName = "varchar(64)")]
    public string PdvPcOsCaption { get; set; }

    [Column("pdv_pcOsCodeSet", TypeName = "varchar(6)")]
    public string PdvPcOsCodeSet { get; set; }

    [Column("pdv_pcOsCountryCode", TypeName = "varchar(256)")]
    public string PdvPcOsCountryCode { get; set; }

    [Column("pdv_pcOsCurrentTimeZone", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcOsCurrentTimeZone { get; set; }

    [Column("pdv_pcOsFreePhysicalMemory", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsFreePhysicalMemory { get; set; }

    [Column("pdv_pcOsFreeSpaceInPagingFiles", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsFreeSpaceInPagingFiles { get; set; }

    [Column("pdv_pcOsFreeVirtualMemory", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsFreeVirtualMemory { get; set; }

    [Column("pdv_pcOsInstallDate", TypeName = "DATETIME")]
    public DateTime? PdvPcOsInstallDate { get; set; }

    [Column("pdv_pcOsLastBootUpTime", TypeName = "DATETIME")]
    public DateTime? PdvPcOsLastBootUpTime { get; set; }

    [Column("pdv_pcOsLocalDateTime", TypeName = "DATETIME")]
    public DateTime? PdvPcOsLocalDateTime { get; set; }

    [Column("pdv_pcOsLocale", TypeName = "varchar(6)")]
    public string PdvPcOsLocale { get; set; }

    [Column("pdv_pcOsNumberOfProcesses", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsNumberOfProcesses { get; set; }

    [Column("pdv_pcOsNumberOfUsers", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsNumberOfUsers { get; set; }

    [Column("pdv_pcOsOperatingSystemSKU", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsOperatingSystemSku { get; set; }

    [Column("pdv_pcOSArchitecture", TypeName = "varchar(10)")]
    public string PdvPcOsarchitecture { get; set; }

    [Column("pdv_pcOSLanguage", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOslanguage { get; set; }

    [Column("pdv_pcOSProductSuite", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsproductSuite { get; set; }

    [Column("pdv_pcOsPortableOperatingSystem", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcOsPortableOperatingSystem { get; set; }

    [Column("pdv_pcOsPrimary", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcOsPrimary { get; set; }

    [Column("pdv_pcOsProductType", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsProductType { get; set; }

    [Column("pdv_pcOsRegisteredUser", TypeName = "varchar(100)")]
    public string PdvPcOsRegisteredUser { get; set; }

    [Column("pdv_pcOsSerialNumber", TypeName = "varchar(50)")]
    public string PdvPcOsSerialNumber { get; set; }

    [Column("pdv_pcOsServicePackMajorVersion", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcOsServicePackMajorVersion { get; set; }

    [Column("pdv_pcOsServicePackMinorVersion", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcOsServicePackMinorVersion { get; set; }

    [Column("pdv_pcOsSizeStoredInPagingFiles", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsSizeStoredInPagingFiles { get; set; }

    [Column("pdv_pcOsSuiteMask", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcOsSuiteMask { get; set; }

    [Column("pdv_pcOsSystemDrive", TypeName = "varchar(2)")]
    public string PdvPcOsSystemDrive { get; set; }

    [Column("pdv_pcOsTotalSwapSpaceSize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsTotalSwapSpaceSize { get; set; }

    [Column("pdv_pcOsTotalVirtualMemorySize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsTotalVirtualMemorySize { get; set; }

    [Column("pdv_pcOsTotalVisibleMemorySize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvPcOsTotalVisibleMemorySize { get; set; }

    [Column("pdv_pcOsVersion", TypeName = "varchar(20)")]
    public string PdvPcOsVersion { get; set; }

    [Column("pdv_procHandle", TypeName = "varchar(256)")]
    public string PdvProcHandle { get; set; }

    [Column("pdv_procHandleCount", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcHandleCount { get; set; }

    [Column("pdv_procKernelModeTime", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcKernelModeTime { get; set; }

    [Column("pdv_procOtherOperationCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcOtherOperationCount { get; set; }

    [Column("pdv_procOtherTransferCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcOtherTransferCount { get; set; }

    [Column("pdv_procPageFaults", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcPageFaults { get; set; }

    [Column("pdv_procPageFileUsage", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcPageFileUsage { get; set; }

    [Column("pdv_procPeakPageFileUsage", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcPeakPageFileUsage { get; set; }

    [Column("pdv_procPeakVirtualSize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcPeakVirtualSize { get; set; }

    [Column("pdv_procPeakWorkingSetSize", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcPeakWorkingSetSize { get; set; }

    [Column("pdv_procPriority", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcPriority { get; set; }

    [Column("pdv_procPrivatePageCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcPrivatePageCount { get; set; }

    [Column("pdv_procProcessId", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcProcessId { get; set; }

    [Column("pdv_procReadOperationCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcReadOperationCount { get; set; }

    [Column("pdv_procReadTransferCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcReadTransferCount { get; set; }

    [Column("pdv_procThreadCount", TypeName = "NUMERIC(10, 0)")]
    public int? PdvProcThreadCount { get; set; }

    [Column("pdv_procUserModeTime", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcUserModeTime { get; set; }

    [Column("pdv_procVirtualSize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcVirtualSize { get; set; }

    [Column("pdv_procWorkingSetSize", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcWorkingSetSize { get; set; }

    [Column("pdv_procWriteOperationCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcWriteOperationCount { get; set; }

    [Column("pdv_procWriteTransferCount", TypeName = "NUMERIC(20, 0)")]
    public int? PdvProcWriteTransferCount { get; set; }

    [Column("pdv_pcPrcAddressWidth", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcAddressWidth { get; set; }

    [Column("pdv_pcPrcArchitecture", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcArchitecture { get; set; }

    [Column("pdv_pcPrcAvailability", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcAvailability { get; set; }

    [Column("pdv_pcPrcCaption", TypeName = "varchar(64)")]
    public string PdvPcPrcCaption { get; set; }

    [Column("pdv_pcPrcCharacteristics", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcCharacteristics { get; set; }

    [Column("pdv_pcPrcConfigManagerErrorCode", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcConfigManagerErrorCode { get; set; }

    [Column("pdv_pcPrcConfigManagerUserConfig", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcPrcConfigManagerUserConfig { get; set; }

    [Column("pdv_pcPrcCpuStatus", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcCpuStatus { get; set; }

    [Column("pdv_pcPrcCurrentClockSpeed", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcCurrentClockSpeed { get; set; }

    [Column("pdv_pcPrcCurrentVoltage", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcCurrentVoltage { get; set; }

    [Column("pdv_pcPrcDataWidth", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcDataWidth { get; set; }

    [Column("pdv_pcPrcExtClock", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcExtClock { get; set; }

    [Column("pdv_pcPrcFamily", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcFamily { get; set; }

    [Column("pdv_pcPrcL2CacheSize", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcL2cacheSize { get; set; }

    [Column("pdv_pcPrcL2CacheSpeed", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcL2cacheSpeed { get; set; }

    [Column("pdv_pcPrcL3CacheSize", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcL3cacheSize { get; set; }

    [Column("pdv_pcPrcL3CacheSpeed", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcL3cacheSpeed { get; set; }

    [Column("pdv_pcPrcLevel", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcLevel { get; set; }

    [Column("pdv_pcPrcLoadPercentage", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcLoadPercentage { get; set; }

    [Column("pdv_pcPrcMaxClockSpeed", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcMaxClockSpeed { get; set; }

    [Column("pdv_pcPrcName", TypeName = "varchar(100)")]
    public string PdvPcPrcName { get; set; }

    [Column("pdv_pcPrcNumberOfCores", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcNumberOfCores { get; set; }

    [Column("pdv_pcPrcNumberOfEnabledCore", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcNumberOfEnabledCore { get; set; }

    [Column("pdv_pcPrcNumberOfLogicalProcessors", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcNumberOfLogicalProcessors { get; set; }

    [Column("pdv_pcPrcPowerManagementSupported", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcPrcPowerManagementSupported { get; set; }

    [Column("pdv_pcPrcProcessorId", TypeName = "varchar(100)")]
    public string PdvPcPrcProcessorId { get; set; }

    [Column("pdv_pcPrcProcessorType", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcProcessorType { get; set; }

    [Column("pdv_pcPrcRevision", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcRevision { get; set; }

    [Column("pdv_pcPrcSecondLevelAddressTranslationExtensions", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPcPrcSecondLevelAddressTranslationExtensions { get; set; }

    [Column("pdv_pcPrcStatus", TypeName = "varchar(10)")]
    public string PdvPcPrcStatus { get; set; }

    [Column("pdv_pcPrcStatusInfo", TypeName = "NUMERIC(5, 0)")]
    public int? PdvPcPrcStatusInfo { get; set; }

    [Column("pdv_pcPrcSystemName", TypeName = "varchar(255)")]
    public string PdvPcPrcSystemName { get; set; }

    [Column("pdv_pcPrcThreadCount", TypeName = "NUMERIC(10, 0)")]
    public int? PdvPcPrcThreadCount { get; set; }

    [Column("pdv_gpuAdapterRAM", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuAdapterRam { get; set; }

    [Column("pdv_gpuAvailability", TypeName = "NUMERIC(5, 0)")]
    public int? PdvGpuAvailability { get; set; }

    [Column("pdv_gpuConfigManagerErrorCode", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuConfigManagerErrorCode { get; set; }

    [Column("pdv_gpuCurrentBitsPerPixel", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuCurrentBitsPerPixel { get; set; }

    [Column("pdv_gpuCurrentHorizontalResolution", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuCurrentHorizontalResolution { get; set; }

    [Column("pdv_gpuCurrentNumberOfColors", TypeName = "NUMERIC(20, 0)")]
    public int? PdvGpuCurrentNumberOfColors { get; set; }

    [Column("pdv_gpuCurrentRefreshRate", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuCurrentRefreshRate { get; set; }

    [Column("pdv_gpuCurrentScanMode", TypeName = "NUMERIC(5, 0)")]
    public int? PdvGpuCurrentScanMode { get; set; }

    [Column("pdv_gpuCurrentVerticalResolution", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuCurrentVerticalResolution { get; set; }

    [Column("pdv_gpuDitherType", TypeName = "NUMERIC(10, 0)")]
    public int? PdvGpuDitherType { get; set; }

    [Column("pdv_gpuDriverVersion", TypeName = "varchar(50)")]
    public string PdvGpuDriverVersion { get; set; }

    [Column("pdv_gpuStatus", TypeName = "varchar(10)")]
    public string PdvGpuStatus { get; set; }

    [Column("pdv_gpuVideoProcessor", TypeName = "varchar(100)")]
    public string PdvGpuVideoProcessor { get; set; }

    [Column("pdv_persTim", TypeName = "tinyint")]
    public byte PdvPersTim { get; set; }

    [Column("pdv_pdvUpdRunVerDt", TypeName = "DATETIME")]
    public DateTime? PdvPdvUpdRunVerDt { get; set; }

    [Column("pdv_pdvUpdRunVer", TypeName = "varchar(20)")]
    public string PdvPdvUpdRunVer { get; set; }

    [Column("pdv_pdvUpdNewVerDt", TypeName = "DATETIME")]
    public DateTime? PdvPdvUpdNewVerDt { get; set; }

    [Column("pdv_pdvUpdNewVer", TypeName = "varchar(20)")]
    public string PdvPdvUpdNewVer { get; set; }

    [Column("pdv_pdvUpdReady", TypeName = "NUMERIC(1, 0)")]
    public int? PdvPdvUpdReady { get; set; }

    [Column("fk_tb_ator")]
    public int? FkTbAtor { get; set; }

    [ForeignKey("FkTbAtor")]
    [InverseProperty("TbPdv")]
    public virtual TbAtor FkTbAtorNavigation { get; set; }

    [InverseProperty("FkTbPdvNavigation")]
    public virtual ICollection<TbClasCont2> TbClasCont2 { get; set; } = new List<TbClasCont2>();

    [InverseProperty("FkTbPdvNavigation")]
    public virtual ICollection<TbJornada> TbJornada { get; set; } = new List<TbJornada>();

    [InverseProperty("FkTbPdvNavigation")]
    public virtual ICollection<TbNfeEnviadaFilial> TbNfeEnviadaFilial { get; set; } = new List<TbNfeEnviadaFilial>();
}